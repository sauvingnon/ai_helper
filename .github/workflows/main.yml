name: Deploy to Server

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ai_secrets

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ ai_secrets.SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          echo -e "Host *\n  StrictHostKeyChecking no\n  IdentityFile ~/.ssh/id_ed25519\n" > ~/.ssh/config
          
      - name: Setup Git SSH Key on server
        run: |
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} \
            ${{ ai_secrets.SSH_USER }}@${{ ai_secrets.SSH_HOST }} "
              mkdir -p ~/.ssh &&
              echo '${{ ai_secrets.GIT_DEPLOY_KEY }}' > ~/.ssh/id_git &&
              chmod 600 ~/.ssh/id_git &&
              printf 'Host github.com\n  IdentityFile ~/.ssh/id_git\n  StrictHostKeyChecking no\n' >> ~/.ssh/config
            "
      - name: Prepare project dir on server
        run: |
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no -p ${{ ai_secrets.SSH_PORT }} ${{ ai_secrets.SSH_USER }}@${{ ai_secrets.SSH_HOST }} "
            echo 'üìÇ –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—é /srv/ai_helper'
            sudo mkdir -p /srv/ai_helper
            sudo chown -R ${{ ai_secrets.SSH_USER }}:${{ ai_secrets.SSH_USER }} /srv/ai_helper
            sudo chmod -R 755 /srv/ai_helper
          "
          
      - name: Clone Repo if not exists
        run: |
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no -p ${{ ai_secrets.SSH_PORT }} ${{ ai_secrets.SSH_USER }}@${{ ai_secrets.SSH_HOST }} '
            if ! command -v git &> /dev/null; then
              echo "üì¶ Git –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é..."
              if [ -f /etc/debian_version ]; then
                sudo apt update && sudo apt install -y git
              elif [ -f /etc/redhat-release ]; then
                sudo yum install -y git
              else
                echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –û–°, git –Ω—É–∂–Ω–æ —Å—Ç–∞–≤–∏—Ç—å —Ä—É–∫–∞–º–∏" && exit 1
              fi
            fi
      
            if [ ! -d /srv/ai_helper/.git ]; then
              git clone git@github.com:sauvingnon/ai_helper.git /srv/ai_helper
            fi
          '
      - name: Create env files on server
        run: |
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no -p ${{ ai_secrets.SSH_PORT }} \
            ${{ ai_secrets.SSH_USER }}@${{ ai_secrets.SSH_HOST }} "
              echo '${{ ai_secrets.TG_BOT_ENV_FILE }}' > /srv/ai_helper/ai_bot_services/ai_tg_bot/.env &&
              echo '${{ ai_secrets.VK_BOT_ENV_FILE }}' > /srv/ai_helper/ai_bot_services/ai_vk_bot/.env &&
              echo '${{ ai_secrets.AI_SERVICE_ENV_FILE }}' > /srv/ai_helper/ai_bot_services/ai_service/.env
            "
      - name: Deploy over SSH
        run: |
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no -p ${{ ai_secrets.SSH_PORT }} ${{ ai_secrets.SSH_USER }}@${{ ai_secrets.SSH_HOST }} '
            cd /srv/ai_helper &&
            git fetch origin master &&
            git reset --hard origin/master &&
            cd /srv/ai_helper/ai_bot_services &&
            sudo docker compose down &&
            sudo docker compose up -d --build
          '
      - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
        run: |
          ssh -p ${{ ai_secrets.SSH_PORT }} ${{ ai_secrets.SSH_USER }}@${{ ai_secrets.SSH_HOST }} '
            echo "üîç –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
            sudo docker ps
            echo ""
            echo "üö® –ü—Ä–æ–≤–µ—Ä–∫–∞: –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã running?"
            FAIL=0
            for c in bot ai_service ai_tg_bot ai_vk_bot; do
              STATUS=$(sudo docker inspect -f "{{.State.Status}}" ${c} || echo "missing")
              echo "$c -> $STATUS"
              if [ "$STATUS" != "running" ]; then
                echo "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $c –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
                FAIL=1
              fi
            done
            exit $FAIL
          '
