from vkbottle import Keyboard, KeyboardButtonColor, Text
from app.schemas.ai_service import ModelName

# üìå –ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –º–µ–Ω—é (persistent, –±—É–¥–µ—Ç –≤–∏—Å–µ—Ç—å —Å–Ω–∏–∑—É)
commands = (
    Keyboard(one_time=False, inline=False)
    .add(Text("üè† –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫", payload={"command": "start"}), color=KeyboardButtonColor.PRIMARY)
    .add(Text("üöÄ –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏", payload={"command": "set_model"}), color=KeyboardButtonColor.PRIMARY)
)

# üì± –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è (inline, –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º)
start_keyboard = (
    Keyboard(inline=True)
    .add(Text("ü§ñ –í—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å", payload={"command": "set_model"}), color=KeyboardButtonColor.PRIMARY)
)

def get_model_keyboard():
    keyboard = Keyboard(inline=True)
    for i, m in enumerate(ModelName, start=1):
        keyboard.add(
            Text(
                label=m.name,
                payload={"command": f"choose_model:{m.value}"}
            )
        )
        if i % 2 == 0:  # –∫–∞–∂–¥—ã–µ 2 –∫–Ω–æ–ø–∫–∏ -> –Ω–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞
            keyboard.row()

    keyboard.add(
        Text("‚ùå –û—Ç–º–µ–Ω–∞", payload={"command": "cancel_model"}),
        color=KeyboardButtonColor.NEGATIVE
    )

    return keyboard