from aiogram import Router, types, F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext
from app.state.model_fsm import ModelFSM
from app.schemas.ai_service import ModelName, USER_MODELS, MODEL_CONFIG
from app.keyboards.inline import get_model_keyboard

router = Router()

# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π –Ω–∞ –æ—Å–Ω–æ–≤–µ MODEL_CONFIG
def get_model_description() -> str:
    lines = ["üìñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏:\n"]
    for model, info in MODEL_CONFIG.items():
        block = (
            f"üîπ **{model.value}**\n"
            f"   ‚îú –†–æ–ª—å: {info.role}\n"
            f"   ‚îú –°–∫–æ—Ä–æ—Å—Ç—å: {info.speed}\n"
            f"   ‚îú –ö–∞—á–µ—Å—Ç–≤–æ: {info.quality}\n"
            f"   ‚îî {info.notes}\n"
        )
        lines.append(block)
    return "\n".join(lines)

# –û—Ç–º–µ–Ω–∞ –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏
@router.callback_query(F.data == "cancel_model")
async def cmd_cancel_model_callback(callback: CallbackQuery, state: FSMContext):
    await state.clear()

    value = USER_MODELS.get(callback.from_user.id, ModelName.LLAMA3_1_8B.value)

    await callback.message.answer(f"–û–∫–µ–π, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–±–µ - {value}. –û–Ω —Ç–µ–±—è —Å–ª—É—à–∞–µ—Ç:")
    await callback.answer()

# –ö–æ–º–∞–Ω–¥–∞ /set_model –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏
@router.message(F.text == "/set_model")
async def cmd_set_model_message(message: Message, state: FSMContext):
    await state.set_state(ModelFSM.choosing)
    await message.answer(
        f"{get_model_description()}\n\n–í—ã–±–µ—Ä–∏ –º–æ–¥–µ–ª—å:",
        reply_markup=get_model_keyboard()
    )

# –ö–Ω–æ–ø–∫–∞ ¬´–í—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å¬ª (callback_data="set_model")
@router.callback_query(F.data == "set_model")
async def cmd_set_model_callback(callback: CallbackQuery, state: FSMContext):
    await state.set_state(ModelFSM.choosing)
    await callback.message.answer(
        f"{get_model_description()}\n\n–í—ã–±–µ—Ä–∏ –º–æ–¥–µ–ª—å:",
        reply_markup=get_model_keyboard()
    )
    await callback.answer()  # –∑–∞–∫—Ä—ã–≤–∞–µ—Ç ¬´—á–∞—Å–∏–∫–∏¬ª –Ω–∞ –∫–Ω–æ–ø–∫–µ

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏
@router.callback_query(F.data.startswith("set_model:"))
async def choose_model(callback: types.CallbackQuery, state: FSMContext):
    model_value = callback.data.split(":", 1)[1]
    USER_MODELS[callback.from_user.id] = model_value
    await state.clear()
    await callback.message.edit_text(f"‚úÖ –ú–æ–¥–µ–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {model_value}. –ú–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å:")
    await callback.answer()
